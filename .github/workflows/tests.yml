name: test

on:
  push:
    branches:
      - "main"
      - "*.*.*"
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '*.rst'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '*.rst'

permissions:
  contents: read
jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.9"
          - "3.10"

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v4
        id: cache
        with:
          path: .venv
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements.analytic.txt') }}-test-v01

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          uv venv
          uv pip install -U pip
          uv pip install -r requirements.analytic.txt
          uv pip install -r requirements.txt
          uv pip install pytest

      - name: Use Python virtual environment
        run: |
          echo "$GITHUB_WORKSPACE/.venv/bin" >> $GITHUB_PATH
          echo "VIRTUAL_ENV=$GITHUB_WORKSPACE/.venv" >> $GITHUB_ENV

      - name: Check git is working
        run: |
          git config --global user.email "ddeutils@github.actions"
          git config --global user.name "Testing Git on Travis CI"
          git --version
          git config --list

#      - name: Start containers
#        run: |
#          sudo mkdir -p ./data/postgres-data/
#          USER=$(id -u) docker-compose -f "docker-compose.pg.yml" up -d --build

      - name: Test with pytest
        run: |
          pytest -v

#      - name: Stop containers
#        if: always()
#        run: docker-compose -f "docker-compose.pg.yml" down
